import { p as proxyCustomElement, H, h } from './p-0f92e1a5.js';
import { v as visaChartsUtils_umd } from './p-1c8435c5.js';

var xhtml = "http://www.w3.org/1999/xhtml";

const namespaces = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};

function namespace(name) {
  var prefix = name += "", i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;
}

function creatorInherit(name) {
  return function() {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === xhtml && document.documentElement.namespaceURI === xhtml
        ? document.createElement(name)
        : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

function creator(name) {
  var fullname = namespace(name);
  return (fullname.local
      ? creatorFixed
      : creatorInherit)(fullname);
}

function none() {}

function selector(selector) {
  return selector == null ? none : function() {
    return this.querySelector(selector);
  };
}

function selection_select(select) {
  if (typeof select !== "function") select = selector(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new Selection(subgroups, this._parents);
}

function empty() {
  return [];
}

function selectorAll(selector) {
  return selector == null ? empty : function() {
    return this.querySelectorAll(selector);
  };
}

function selection_selectAll(select) {
  if (typeof select !== "function") select = selectorAll(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new Selection(subgroups, parents);
}

function matcher(selector) {
  return function() {
    return this.matches(selector);
  };
}

function selection_filter(match) {
  if (typeof match !== "function") match = matcher(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new Selection(subgroups, this._parents);
}

function sparse(update) {
  return new Array(update.length);
}

function selection_enter() {
  return new Selection(this._enter || this._groups.map(sparse), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
  querySelector: function(selector) { return this._parent.querySelector(selector); },
  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
};

function constant(x) {
  return function() {
    return x;
  };
}

var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length;

  // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.
  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }

  // Put any non-null nodes that don’t fit into exit.
  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue;

  // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.
  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);
      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  }

  // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.
  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);
    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }

  // Add any remaining nodes that were not bound to data to exit.
  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {
      exit[i] = node;
    }
  }
}

function selection_data(value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function(d) { data[++j] = d; });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;

  if (typeof value !== "function") value = constant(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);

    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

    // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength);
        previous._next = next || null;
      }
    }
  }

  update = new Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}

function selection_exit() {
  return new Selection(this._exit || this._groups.map(sparse), this._parents);
}

function selection_join(onenter, onupdate, onexit) {
  var enter = this.enter(), update = this, exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove(); else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}

function selection_merge(selection) {

  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new Selection(merges, this._parents);
}

function selection_order() {

  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}

function selection_sort(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }
    sortgroup.sort(compareNode);
  }

  return new Selection(sortgroups, this._parents).order();
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

function selection_call() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}

function selection_nodes() {
  var nodes = new Array(this.size()), i = -1;
  this.each(function() { nodes[++i] = this; });
  return nodes;
}

function selection_node() {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}

function selection_size() {
  var size = 0;
  this.each(function() { ++size; });
  return size;
}

function selection_empty() {
  return !this.node();
}

function selection_each(callback) {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}

function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function() {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);
    else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
    else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

function selection_attr(name, value) {
  var fullname = namespace(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local
        ? node.getAttributeNS(fullname.space, fullname.local)
        : node.getAttribute(fullname);
  }

  return this.each((value == null
      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function"
      ? (fullname.local ? attrFunctionNS : attrFunction)
      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));
}

function defaultView(node) {
  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
      || (node.document && node) // node is a Window
      || node.defaultView; // node is a Document
}

function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function() {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);
    else this.style.setProperty(name, v, priority);
  };
}

function selection_style(name, value, priority) {
  return arguments.length > 1
      ? this.each((value == null
            ? styleRemove : typeof value === "function"
            ? styleFunction
            : styleConstant)(name, value, priority == null ? "" : priority))
      : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name)
      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);
}

function propertyRemove(name) {
  return function() {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function() {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];
    else this[name] = v;
  };
}

function selection_property(name, value) {
  return arguments.length > 1
      ? this.each((value == null
          ? propertyRemove : typeof value === "function"
          ? propertyFunction
          : propertyConstant)(name, value))
      : this.node()[name];
}

function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function(name) {
    var i = this._names.indexOf(name);
    if (i < 0) {
      this._names.push(name);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function(name) {
    var i = this._names.indexOf(name);
    if (i >= 0) {
      this._names.splice(i, 1);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function(name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function() {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

function selection_classed(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()), i = -1, n = names.length;
    while (++i < n) if (!list.contains(names[i])) return false;
    return true;
  }

  return this.each((typeof value === "function"
      ? classedFunction : value
      ? classedTrue
      : classedFalse)(names, value));
}

function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function() {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

function selection_text(value) {
  return arguments.length
      ? this.each(value == null
          ? textRemove : (typeof value === "function"
          ? textFunction
          : textConstant)(value))
      : this.node().textContent;
}

function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function() {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

function selection_html(value) {
  return arguments.length
      ? this.each(value == null
          ? htmlRemove : (typeof value === "function"
          ? htmlFunction
          : htmlConstant)(value))
      : this.node().innerHTML;
}

function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

function selection_raise() {
  return this.each(raise);
}

function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

function selection_lower() {
  return this.each(lower);
}

function selection_append(name) {
  var create = typeof name === "function" ? name : creator(name);
  return this.select(function() {
    return this.appendChild(create.apply(this, arguments));
  });
}

function constantNull() {
  return null;
}

function selection_insert(name, before) {
  var create = typeof name === "function" ? name : creator(name),
      select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
  return this.select(function() {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}

function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

function selection_remove() {
  return this.each(remove);
}

function selection_cloneShallow() {
  var clone = this.cloneNode(false), parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true), parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_clone(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}

function selection_datum(value) {
  return arguments.length
      ? this.property("__data__", value)
      : this.node().__data__;
}

var filterEvents = {};

var event = null;

if (typeof document !== "undefined") {
  var element = document.documentElement;
  if (!("onmouseenter" in element)) {
    filterEvents = {mouseenter: "mouseover", mouseleave: "mouseout"};
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function(event) {
    var related = event.relatedTarget;
    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function(event1) {
    var event0 = event; // Events can be reentrant (e.g., focus).
    event = event1;
    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {type: t, name: name};
  });
}

function onRemove(typename) {
  return function() {
    var on = this.__on;
    if (!on) return;
    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }
    if (++i) on.length = i;
    else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function(d, i, group) {
    var on = this.__on, o, listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};
    if (!on) this.__on = [o];
    else on.push(o);
  };
}

function selection_on(typename, value, capture) {
  var typenames = parseTypenames(typename + ""), i, n = typenames.length, t;

  if (arguments.length < 2) {
    var on = this.node().__on;
    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;
  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));
  return this;
}

function dispatchEvent(node, type, params) {
  var window = defaultView(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
    else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function() {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function() {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

function selection_dispatch(type, params) {
  return this.each((typeof params === "function"
      ? dispatchFunction
      : dispatchConstant)(type, params));
}

var root = [null];

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: selection_select,
  selectAll: selection_selectAll,
  filter: selection_filter,
  data: selection_data,
  enter: selection_enter,
  exit: selection_exit,
  join: selection_join,
  merge: selection_merge,
  order: selection_order,
  sort: selection_sort,
  call: selection_call,
  nodes: selection_nodes,
  node: selection_node,
  size: selection_size,
  empty: selection_empty,
  each: selection_each,
  attr: selection_attr,
  style: selection_style,
  property: selection_property,
  classed: selection_classed,
  text: selection_text,
  html: selection_html,
  raise: selection_raise,
  lower: selection_lower,
  append: selection_append,
  insert: selection_insert,
  remove: selection_remove,
  clone: selection_clone,
  datum: selection_datum,
  on: selection_on,
  dispatch: selection_dispatch
};

function select(selector) {
  return typeof selector === "string"
      ? new Selection([[document.querySelector(selector)]], [document.documentElement])
      : new Selection([[selector]], root);
}

/**
 * Copyright (c) 2020 Visa, Inc.
 *
 * This source code is licensed under the MIT license
 * https://github.com/visa/visa-chart-components/blob/master/LICENSE
 *
 **/
class DataTableDefaultValues {
}
DataTableDefaultValues.isCompact = false;
DataTableDefaultValues.hideDataTable = false;
DataTableDefaultValues.padding = {
  top: 20,
  bottom: 50,
  right: 60,
  left: 60
};
DataTableDefaultValues.margin = {
  top: 325 * 0.01,
  bottom: 325 * 0.01,
  right: 675 * 0.01,
  left: 675 * 0.01
};

const dataTableCss = "@media all and (-ms-high-contrast: none), (-ms-high-contrast: active){.vcc-btn-label,.vcc-btn-split .vcc-btn--action{position:relative}}@-moz-document url-prefix(){.vcc-btn-split .vcc-btn-label{display:block !important;float:left;text-align:center}}@-moz-document url-prefix(){.vcc-btn-split .vcc-btn--action{display:block !important;float:right;text-align:center}}.vcc-btn.vcc-state--flippable:active [class^='vcc-icon']:not([role]),.vcc-btn.vcc-state--flippable.vcc-state--active [class^='vcc-icon']:not([role]){-webkit-transform:rotate(180deg);transform:rotate(180deg)}.vcc-btn-container{margin-bottom:1.875rem}.vcc-btn-group{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-ms-flex-align:center;align-items:center}.vcc-btn-group>[class^='vcc-btn']:not(.vcc-btn-label){margin:0 0.25rem 3px 0.25rem}.vcc-btn-group>[class^='vcc-btn']:not(.vcc-btn-label):first-child{margin-left:0}.vcc-btn-group>[class^='vcc-btn']:not(.vcc-btn-label):last-child{margin-right:0}.vcc-btn-group--reverse{-webkit-flex-direction:row-reverse;-moz-flex-direction:row-reverse;-ms-flex-direction:row-reverse;-o-flex-direction:row-reverse;flex-direction:row-reverse}.vcc-btn-group--reverse>[class^='vcc-btn']:not(.vcc-btn-label):first-child{margin-left:0.25rem;margin-right:0}.vcc-btn-group--reverse>[class^='vcc-btn']:not(.vcc-btn-label):last-child{margin-left:0;margin-right:0.25rem}.vcc-btn-group--right{-ms-flex-pack:end;justify-content:flex-end}.vcc-btn-label{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-ms-flex-align:center;align-items:center;cursor:pointer;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-pack:center;justify-content:center;margin:auto;max-width:100%;overflow-wrap:break-word;padding:0 1rem;text-align:center;word-break:normal;word-wrap:normal}.vcc-btn-label [class^='vcc-icon']:first-child{margin-right:0.25rem}.vcc-btn-label [class^='vcc-icon']:last-child{margin-left:0.25rem}@-moz-document url-prefix(){.vcc-btn-label{padding:0 0.6875rem}}.vcc-btn-icon{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-font-smoothing:antialiased;border-radius:var(--theme-button--radius, 2px);cursor:pointer !important;font-family:var(--theme-font, OpenSans, sans-serif);font-size:var(--theme-font-size, 14px);font-weight:var(--theme-font-weight--semibold, 600);outline:none;padding-bottom:0;padding-top:0;-webkit-transition:background 0.25s ease;transition:background 0.25s ease;white-space:nowrap;-ms-flex-align:center;align-items:center;background:var(--theme-action-primary, #1f1f1f);border:0;border-radius:2.5rem;-webkit-box-sizing:border-box;box-sizing:border-box;color:var(--theme-button--default-text, #fff);height:3rem;-ms-flex-pack:center;justify-content:center;min-width:3rem;position:relative}.vcc-btn-icon.focus-visible{outline:1px dashed var(--theme-focus-outline-color, #373737)}html:not(.js-focus-visible) .vcc-btn-icon:focus{outline:1px dashed var(--theme-focus-outline-color, #373737)}.vcc-btn-icon[disabled],.vcc-btn-icon.vcc-state--disabled{cursor:default !important;pointer-events:none}.vcc-btn-icon[disabled] .vcc-btn-label,.vcc-btn-icon[disabled] .vcc-btn--action,.vcc-btn-icon.vcc-state--disabled .vcc-btn-label,.vcc-btn-icon.vcc-state--disabled .vcc-btn--action{cursor:default !important}.vcc-btn-icon[disabled] .vcc-btn--action,.vcc-btn-icon.vcc-state--disabled .vcc-btn--action{border-color:var(--theme-button--default-text, #fff)}.vcc-btn-icon [class^='vcc-icon']{fill:var(--theme-button--default-text, #fff);height:1.5rem;width:1.5rem}.vcc-btn-icon _:-ms-fullscreen,.vcc-btn-icon .ie11up,.vcc-btn-icon{display:inline}.vcc-btn-icon [class^='vcc-icon']{fill:var(--theme-button--default-text, #fff);height:1.5rem;width:1.5rem}.vcc-btn-icon:hover,.vcc-btn-icon:active,.vcc-btn-icon:focus{background:var(--theme-action-primary--hover, #d8d8d8);color:var(--theme-button--default-text--hover, #fff)}.vcc-btn-icon:hover::-moz-focus-inner,.vcc-btn-icon:active::-moz-focus-inner,.vcc-btn-icon:focus::-moz-focus-inner{border:0}.vcc-btn-icon:hover [class^='vcc-icon'],.vcc-btn-icon:active [class^='vcc-icon'],.vcc-btn-icon:focus [class^='vcc-icon']{fill:var(--theme-button--default-text--hover, #fff);height:1.5rem;width:1.5rem}.vcc-btn-icon:focus .vcc-btn-label{text-decoration:none}.vcc-btn-icon[disabled],.vcc-btn-icon.vcc-state--disabled{background-color:var(--theme-transparent, rgba(0, 0, 0, 0))}.vcc-btn-icon[disabled] [class^='vcc-icon'],.vcc-btn-icon.vcc-state--disabled [class^='vcc-icon']{fill:var(--theme-button-icon-light--diabled, #d7d7de);height:1.5rem;width:1.5rem}.vcc-btn-icon.vcc-state--active{background:var(--theme-action-primary--selected, #1f1f1f);color:var(--theme-button--default-text--selected, #fff)}.vcc-btn-icon.vcc-state--active [class^='vcc-icon']{fill:var(--theme-button--default-text--selected, #fff);height:1.25rem;width:1.25rem}.vcc-btn-icon .vcc-btn-label{padding:0}.vcc-btn-icon .vcc-btn-label [class^='vcc-icon']:first-child{margin-right:0}.vcc-btn-icon .vcc-btn-label [class^='vcc-icon']:last-child{margin-left:0}.vcc-btn-icon--light{background-color:var(--theme-transparent, rgba(0, 0, 0, 0))}.vcc-btn-icon--light [class^='vcc-icon']{fill:var(--theme-button-icon, #1f1f1f);height:1.5rem;width:1.5rem}.vcc-btn-icon--light:active{background-color:var(--theme-button-icon-light--hover, #484848)}.vcc-btn-icon--light:active [class^='vcc-icon']{fill:var(--theme-button--default-text--hover, #fff);height:1.5rem;width:1.5rem}.vcc-btn-icon--light:hover:not(:active),.vcc-btn-icon--light:focus:not(:active){background-color:var(--theme-button--secondary-text--background--hover, #e0eafa)}.vcc-btn-icon--light:hover:not(:active) [class^='vcc-icon'],.vcc-btn-icon--light:focus:not(:active) [class^='vcc-icon']{fill:var(--theme-button--secondary-text--hover, #484848);height:1.5rem;width:1.5rem}.vcc-btn-icon--light:disabled{background-color:var(--theme-transparent, rgba(0, 0, 0, 0))}.vcc-btn-icon--light:disabled [class^='vcc-icon']{fill:var(--theme-button--default-text--disabled-background, #d7d7de);height:1.5rem;width:1.5rem}.vcc-btn-icon--light-outline{background-color:var(--theme-transparent, rgba(0, 0, 0, 0));border:2px solid var(--theme-button-icon, #1f1f1f)}.vcc-btn-icon--light-outline [class^='vcc-icon']{fill:var(--theme-button-icon, #1f1f1f);height:1.5rem;width:1.5rem}.vcc-btn-icon--light-outline:active{background-color:var(--theme-button-icon-light--hover, #484848);border-color:var(--theme-button-icon-light--hover, #484848)}.vcc-btn-icon--light-outline:active [class^='vcc-icon']{fill:var(--theme-button--default-text--hover, #fff);height:1.5rem;width:1.5rem}.vcc-btn-icon--light-outline:hover:not(:active){background-color:var(--theme-button-icon-light-background--hover, #e0eafa);border-color:var(--theme-button-icon-light--hover, #484848)}.vcc-btn-icon--light-outline:hover:not(:active) [class^='vcc-icon']{fill:var(--theme-button-icon-light--hover, #484848);height:1.5rem;width:1.5rem}.vcc-btn-icon--light-outline:focus:not(:active){background-color:var(--theme-button-icon-light-background--hover, #e0eafa);border-color:var(--theme-button-icon-light--hover, #484848)}.vcc-btn-icon--light-outline:focus:not(:active) [class^='vcc-icon']{fill:var(--theme-button-icon-light--hover, #484848);height:1.5rem;width:1.5rem}.vcc-btn-icon--light-outline:disabled{background-color:var(--theme-transparent, rgba(0, 0, 0, 0));border-color:var(--theme-button--default-text--disabled-background, #d7d7de)}.vcc-btn-icon--light-outline:disabled [class^='vcc-icon']{fill:var(--theme-button--default-text--disabled-background, #d7d7de);height:1.5rem;width:1.5rem}.vcc-btn-icon--light-tiny{background-color:var(--theme-transparent, rgba(0, 0, 0, 0));color:var(--theme-button-icon-light, #484848);height:2rem;min-width:2rem}.vcc-btn-icon--light-tiny [class^='vcc-icon']{fill:currentColor;height:1rem;width:1rem}.vcc-btn-icon--light-tiny:active{background-color:var(--theme-button-icon-light--hover, #484848)}.vcc-btn-icon--light-tiny:active [class^='vcc-icon']{fill:currentColor;height:1rem;width:1rem}.vcc-btn-icon--light-tiny:hover:not(:active){background-color:var(--theme-button-icon-light-background--hover, #e0eafa);color:var(--theme-button-icon-light, #484848)}.vcc-btn-icon--light-tiny:hover:not(:active) [class^='vcc-icon']{fill:currentColor;height:1rem;width:1rem}.vcc-btn-icon--light-tiny:focus:not(:active){background-color:var(--theme-button-icon-light-background--hover, #e0eafa);color:var(--theme-button-icon-light, #484848)}.vcc-btn-icon--light-tiny:focus:not(:active) [class^='vcc-icon']{fill:currentColor;height:1rem;width:1rem}.vcc-btn-icon--light-tiny:disabled{background-color:var(--theme-transparent, rgba(0, 0, 0, 0));border-color:#d7d7de}.vcc-btn-icon--light-tiny:disabled [class^='vcc-icon']{fill:var(--theme-button--default-text--disabled-background, #d7d7de);height:1rem;width:1rem}.vcc-btn-icon--dark{background-color:var(--theme-transparent, rgba(0, 0, 0, 0))}.vcc-btn-icon--dark:focus:not(:active){outline-color:var(--theme-button--default-text--focus, #fff)}.vcc-btn-icon--dark:hover,.vcc-btn-icon--dark:focus{background-color:var(--theme-button-icon-light--hover, #484848);border-color:var(--theme-button-icon-light--hover, #484848)}.vcc-btn-icon--dark:disabled{background-color:var(--theme-transparent, rgba(0, 0, 0, 0));border-color:var(--theme-button--default-text--disabled-background, #d7d7de)}.vcc-btn-icon--dark:disabled [class^='vcc-icon']{fill:var(--theme-button--default-text--disabled-background, #d7d7de);height:1.5rem;width:1.5rem}.vcc-btn-icon--dark-outline{background-color:var(--theme-transparent, rgba(0, 0, 0, 0));border:2px solid var(--theme-button--default-text, #fff)}.vcc-btn-icon--dark-outline:focus:not(:active){outline-color:var(--theme-button--default-text--focus, #fff)}.vcc-btn-icon--dark-outline:hover,.vcc-btn-icon--dark-outline:focus{background-color:var(--theme-button-icon-light--hover, #484848);border-color:var(--theme-button-icon-light--hover, #484848)}.vcc-btn-icon--dark-outline:disabled{background-color:var(--theme-transparent, rgba(0, 0, 0, 0));border-color:var(--theme-button--default-text--disabled-background, #d7d7de)}.vcc-btn-icon--dark-outline:disabled [class^='vcc-icon']{fill:var(--theme-button--default-text--disabled-background, #d7d7de);height:1.5rem;width:1.5rem}.vcc-btn-icon--dark-tiny{background-color:var(--theme-transparent, rgba(0, 0, 0, 0));height:2rem;min-width:2rem}.vcc-btn-icon--dark-tiny:focus:not(:active){outline-color:var(--theme-button--default-text--focus, #fff)}.vcc-btn-icon--dark-tiny [class^='vcc-icon']{fill:var(--theme-button--default-text, #fff);height:1rem;width:1rem}.vcc-btn-icon--dark-tiny:active{background-color:var(--theme-button-icon-light--hover, #484848)}.vcc-btn-icon--dark-tiny:active [class^='vcc-icon']{fill:var(--theme-button--default-text--hover, #fff);height:1rem;width:1rem}.vcc-btn-icon--dark-tiny:hover:not(:active),.vcc-btn-icon--dark-tiny:focus:not(:active){background-color:var(--theme-button-icon-light--hover, #484848)}.vcc-btn-icon--dark-tiny:hover:not(:active) [class^='vcc-icon'],.vcc-btn-icon--dark-tiny:focus:not(:active) [class^='vcc-icon']{fill:var(--theme-button--default-text--hover, #fff);height:1rem;width:1rem}.vcc-btn-icon--dark-tiny:disabled{background-color:var(--theme-transparent, rgba(0, 0, 0, 0));border-color:#d7d7de}.vcc-btn-icon--dark-tiny:disabled [class^='vcc-icon']{fill:var(--theme-button--default-text--disabled-background, #d7d7de);height:1rem;width:1rem}.vcc-thead .vcc-th{background-color:var(--theme-data-table-header-background, #fff);-webkit-box-shadow:0 -2px 0 var(--theme-data-table-header-underline, #333333) inset;box-shadow:0 -2px 0 var(--theme-data-table-header-underline, #333333) inset}.vcc-tbody .vcc-tr:nth-child(odd){background:var(--theme-data-table-row-background, #fff)}.vcc-tbody .vcc-tr:nth-child(even){background:var(--theme-data-table-row-background--alt, #f2f4f8)}.vcc-th{color:var(--theme-data-table-header-text, #333333);font-weight:var(--theme-font-weight--semibold, 600);height:var(--theme-data-tableheader-height, 48px);text-align:left;vertical-align:middle}.vcc-td{height:var(--theme-data-tablerow-height, 72px)}.vcc-td,.vcc-th{padding:0 var(--theme-data-table-padding, 14px)}.vcc-data-table{border-collapse:collapse;-ms-flex:1;flex:1}.vcc-secondary-data-table{margin-left:20px;-ms-flex:1;flex:1}.vcc-data-table.vcc-state--single-select .vcc-tbody .vcc-tr:hover,.vcc-data-table.vcc-state--multi-select .vcc-tbody .vcc-tr:hover{background-color:var(--theme-data-table-row-background--hover, #e0eafa)}.vcc-data-table.vcc-state--single-select .vcc-tbody .vcc-tr:active,.vcc-data-table.vcc-state--multi-select .vcc-tbody .vcc-tr:active{background-color:var(--theme-data-table-row-background--pressed, #d7d7de)}.vcc-data-table.vcc-state--single-select .vcc-tbody .vcc-tr:focus,.vcc-data-table.vcc-state--multi-select .vcc-tbody .vcc-tr:focus{background-color:var(--theme-data-table-row-background--focus, #e0eafa);outline:1px dashed var(--theme-focus-outline-color, #373737)}.vcc-data-table.vcc-state--single-select .vcc-tbody .vcc-tr:focus.vcc-state--selected,.vcc-data-table.vcc-state--multi-select .vcc-tbody .vcc-tr:focus.vcc-state--selected{background-color:var(--theme-data-table-row-background--selected, #d7d7de)}.vcc-data-table.vcc-state--single-select .vcc-tbody .vcc-tr.vcc-state--selected,.vcc-data-table.vcc-state--multi-select .vcc-tbody .vcc-tr.vcc-state--selected{background-color:var(--theme-data-table-row-background--selected, #d7d7de)}.vcc-data-table.vcc-state--multi-select .vcc-th:first-child,.vcc-data-table.vcc-state--multi-select .vcc-td:first-child{padding:0 0 0 0.3125rem}.vcc-data-table.vcc-state--multi-select .vcc-th:nth-child(2),.vcc-data-table.vcc-state--multi-select .vcc-td:nth-child(2){padding-left:0}.vcc-data-table.vcc-state--compact .vcc-td{height:var(--theme-data-tablerow-height--compact, 44px)}.vcc-data-table.vcc-state--customizable-columns .vcc-thead .vcc-data-table--column-control{padding-right:0}.vcc-data-table.vcc-state--key-value-pairs .vcc-th{background-color:var(--theme-transparent, rgba(0, 0, 0, 0));-webkit-box-shadow:none;box-shadow:none;font-weight:var(--theme-font-weight--semibold, 600)}.vcc-data-table.vcc-state--key-value-pairs .vcc-tr:nth-child(odd){background:var(--theme-data-table-row-background--alt, #f2f4f8)}.vcc-data-table.vcc-state--key-value-pairs .vcc-tr:nth-child(even){background:var(--theme-data-table-row-background, #fff)}.vcc-data-table.vcc-state--divider-lines .vcc-tr:nth-child(n){background-color:var(--theme-data-table-row-background, #fff)}.vcc-data-table.vcc-state--divider-lines .vcc-tr:not(:last-child) .vcc-td,.vcc-data-table.vcc-state--divider-lines .vcc-tr:not(:last-child) .vcc-th{border-bottom:1px solid var(--theme-data-table-divider-line, #d7d7de)}.vcc-data-table.vcc-state--reveal-first-column .vcc-th:first-child,.vcc-data-table.vcc-state--reveal-first-column .vcc-td:first-child{display:none}.vcc-data-table.vcc-state--reveal-last-column .vcc-th:last-child,.vcc-data-table.vcc-state--reveal-last-column .vcc-td:last-child{display:none}.vcc-data-table.vcc-state--reveal:hover .vcc-th:first-child,.vcc-data-table.vcc-state--reveal:hover .vcc-th:last-child,.vcc-data-table.vcc-state--reveal:hover .vcc-td:first-child,.vcc-data-table.vcc-state--reveal:hover .vcc-td:last-child{display:table-cell}.vcc-data-table.vcc-state--reveal:hover .vcc-data-table-inline-actions-cell{padding:0 var(--theme-data-table-padding, 14px)}.vcc-data-table.vcc-state--reveal:hover .vcc-btn-group{display:block}.vcc-data-table.vcc-state--reveal.vcc-state--multi-select .vcc-th:nth-child(2),.vcc-data-table.vcc-state--reveal.vcc-state--multi-select .vcc-td:nth-child(2){padding-left:var(--theme-data-table-padding, 14px)}.vcc-data-table.vcc-state--sticky-header .vcc-th{position:-webkit-sticky;position:sticky}.vcc-data-table-inline-actions-cell{padding:0;width:0}.vcc-data-table-inline-actions-cell .vcc-btn-group{display:none;white-space:nowrap}.vcc-data-table-inline-actions-row:hover .vcc-data-table-inline-actions-cell{padding:0 var(--theme-data-table-padding, 14px)}.vcc-data-table-inline-actions-row:hover .vcc-btn-group{display:block}.vcc-data-table--border-left .vcc-th:not(:first-child),.vcc-data-table--border-left .vcc-td:not(:first-child){border-left:1px solid var(--theme-data-table-divider-line, #d7d7de)}.vcc-data-table .vcc-btn-icon{display:inline-block;margin-right:0.25rem}.vcc-data-table .vcc-data-table-cell-border-left{border-left:1px solid var(--theme-data-table-divider-line, #d7d7de)}.vcc-data-table .vcc-data-table-color-background-alt{background-color:var(--theme-data-table-row-background--alt, #f2f4f8)}.vcc-data-table .vcc-text--right{text-align:right}.vcc-pagination-bar .col{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex}.vcc-pagination-bar .col.col--no-gutter{-ms-flex-direction:row;flex-direction:row}.vcc-pagination-bar .col--align-end{-ms-flex-pack:end;justify-content:flex-end}.vcc-pagination{margin-right:0;width:auto}.vcc-pagination-page-items-count{margin-left:1.6875rem}.vcc-pagination .vcc-btn-split{margin:0}.vcc-btn-sortable{-webkit-font-smoothing:antialiased;-ms-flex-align:center;align-items:center;background:var(--theme-transparent, rgba(0, 0, 0, 0));border:0;-webkit-box-sizing:border-box;box-sizing:border-box;color:var(--theme-font-color, #222);cursor:pointer;display:-ms-inline-flexbox;display:inline-flex;font-family:var(--theme-font, OpenSans, sans-serif);font-size:var(--theme-font-size, 14px);font-weight:var(--theme-font-weight--semibold, 600);height:auto;-ms-flex-pack:start;justify-content:flex-start;outline:none;padding:0;text-align:left}.vcc-btn-sortable.focus-visible{outline:1px dashed var(--theme-focus-outline-color, #373737)}html:not(.js-focus-visible) .vcc-btn-sortable:focus{outline:1px dashed var(--theme-focus-outline-color, #373737)}.vcc-btn-sortable-icon{display:-ms-flexbox;display:flex;height:2rem;width:2rem}.vcc-btn-sortable-icon .vcc-icon--tiny{margin:auto}.o-layout{width:100%;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.o-layout--chart{width:100%}.is--vertical .o-layout--chart{width:90%}.vcc-sr{height:1px;left:-1000000px;overflow:hidden;position:absolute !important;top:auto;width:1px}.visa-viz-data-table-outer-container .visa-viz-data-table-container{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-wrap:wrap;flex-wrap:wrap}.visa-viz-data-table-outer-container .visa-viz-button-wrapper{height:0px}.visa-viz-data-table-outer-container .visa-viz-data-table-button{position:relative;padding:0;height:32px;width:32px}.visa-viz-data-table-outer-container .vcc-btn-icon.vcc-state--active [class^=vcc-icon]{height:1rem;width:1rem}.visa-viz-data-table-outer-container svg.vcc-icons{display:none}.visa-viz-data-table-outer-container .vcc-data-table{float:left}.visa-viz-data-table-outer-container .vcc-data-table th{text-align:left}";

const { getLicenses } = visaChartsUtils_umd;
const DataTable = /*@__PURE__*/ proxyCustomElement(class extends H {
  constructor() {
    super();
    this.__registerHost();
    this.isCompact = DataTableDefaultValues.isCompact;
    this.hideDataTable = DataTableDefaultValues.hideDataTable;
    this.margin = DataTableDefaultValues.margin;
    this.padding = DataTableDefaultValues.padding;
    // debugging props
    this.unitTest = false;
    // state for showing the table
    this.showTable = false;
  }
  componentWillLoad() {
    this.tableColumns = this.tableColumns ? this.tableColumns : (this.tableColumns = Object.keys(this.data[0]));
  }
  componentWillUpdate() {
    this.init();
    this.tableColumns = this.tableColumns ? this.tableColumns : (this.tableColumns = Object.keys(this.data[0]));
  }
  componentDidLoad() {
    this.drawTable();
  }
  componentDidUpdate() {
    this.drawTable();
  }
  reSetRoot() {
    // if we have a hide prop then we use vcc-sr class
    select(this.dataTableEl)
      .classed('vcc-sr', this.hideDataTable)
      .select('#visa-viz-data-table-button-' + this.uniqueID)
      .classed('vcc-state--active', this.showTable);
    if (this.table) {
      this.table.remove();
      this.table = null;
    }
    if (this.secondaryTable) {
      this.secondaryTable.remove();
      this.secondaryTable = null;
    }
    if (!this.table && this.showTable) {
      this.defaults = true;
      this.table = select(this.dataTableEl)
        .select('#visa-viz-data-table-container-' + this.uniqueID)
        .append('table')
        .attr('class', 'vcc-data-table vcc-state--single-select')
        .classed('vcc-state--compact', this.isCompact)
        .attr('data-header', 'header');
      if (this.secondaryData) {
        this.table.attr('aria-label', 'You are currently on data table 1 of 2. This table contains data for the chart nodes');
        this.secondaryTable = select(this.dataTableEl)
          .select('#visa-viz-data-table-container-' + this.uniqueID)
          .append('table')
          .attr('class', 'vcc-secondary-data-table vcc-data-table vcc-state--single-select')
          .attr('aria-label', 'You are currently on data table 2 of 2. This table contains the data for the chart links')
          .classed('vcc-state--compact', this.isCompact)
          .attr('data-header', 'header');
      }
    }
  }
  drawTable() {
    this.reSetRoot();
    // start by drawing the table header
    if (this.showTable) {
      this.thead = this.table
        .append('thead')
        .attr('class', 'vcc-thead')
        .append('tr')
        .attr('class', 'vcc-tr');
      // now add the column headers to the table header
      this.thead
        .selectAll('th')
        .data(this.tableColumns)
        .enter()
        .append('th')
        .attr('class', 'vcc-th')
        .attr('scope', 'col')
        .text(d => d);
      this.tbody = this.table.append('tbody').attr('class', 'vcc-tbody');
      this.rows = this.tbody
        .selectAll('tr')
        .data(this.data)
        .enter()
        .append('tr')
        .attr('class', 'vcc-tr');
      this.cells = this.rows
        .selectAll('.vcc-td')
        .data(row => {
        return this.tableColumns.map(col => {
          return {
            column: col,
            value: row[col]
          };
        });
      })
        .enter()
        .append((_, i) => {
        const element = i ? 'td' : 'th';
        return document.createElement(element);
      })
        .attr('scope', (_, i) => (i ? null : 'row'))
        .html(d => d.value)
        .attr('class', 'vcc-td');
      // draw secondary data table
      if (this.secondaryData) {
        this.thead = this.secondaryTable
          .append('thead')
          .attr('class', 'vcc-thead')
          .append('tr')
          .attr('class', 'vcc-tr');
        // now add the secondary column headers to the table header
        this.thead
          .selectAll('th')
          .data(this.secondaryTableColumns)
          .enter()
          .append('th')
          .attr('class', 'vcc-th')
          .attr('scope', 'col')
          .text(d => d);
        this.tbody = this.secondaryTable.append('tbody').attr('class', 'vcc-tbody');
        this.rows = this.tbody
          .selectAll('tr')
          .data(this.secondaryData)
          .enter()
          .append('tr')
          .attr('class', 'vcc-tr');
        this.cells = this.rows
          .selectAll('.vcc-td')
          .data(row => {
          return this.secondaryTableColumns.map(col => {
            return {
              column: col,
              value: row[col]
            };
          });
        })
          .enter()
          .append((_, i) => {
          const element = i ? 'td' : 'th';
          return document.createElement(element);
        })
          .attr('scope', (_, i) => (i ? null : 'row'))
          .html(d => d.value)
          .attr('class', 'vcc-td');
      }
    }
  }
  // using a similar workaround: https://github.com/Microsoft/TypeScript/issues/10761
  render() {
    const svgProps = { tabindex: -1 };
    const useProps = {
      href: `#visa-viz-view-grid--tiny-${this.uniqueID}`,
      xlinkHref: `#visa-viz-view-grid--tiny-${this.uniqueID}`
    };
    const symbolProps = { viewbox: '0 0 16 16' };
    return (h("div", { class: "visa-viz-data-table-outer-container", "data-testid": this.unitTest ? 'data-table-outer-container' : null }, h("div", { class: "visa-viz-button-wrapper", style: {
        // if we don't push the button up, we need to add padding to the bottom of it
        paddingBottom: `${this.padding.left + this.margin.left - 35 < 0 ? 32 : 0}px`
      } }, h("button", { id: `visa-viz-data-table-button-${this.uniqueID}`, type: "button", class: "vcc-btn-icon vcc-btn-icon--light-tiny visa-viz-data-table-button", style: {
        // if we have enough room to the left, we push the button next to the chart, otherwise we put it below the chart
        transform: `translate(${this.padding.left +
          this.margin.left -
          (this.padding.left + this.margin.left - 35 < 0 ? 0 : 35)}px,
                ${this.padding.left + this.margin.left - 35 < 0 ? 0 : -40}px)`
      }, "aria-label": "display data table", "aria-expanded": this.showTable ? 'true' : 'false', role: "button", tabIndex: 0, onClick: () => (this.showTable = !this.showTable) }, h("svg", Object.assign({ class: "vcc-icon--tiny", focusable: "false" }, svgProps), h("use", Object.assign({}, useProps)))), h("svg", { class: "vcc-icons" }, h("symbol", Object.assign({ id: `visa-viz-view-grid--tiny-${this.uniqueID}` }, symbolProps), h("path", { d: "M5,5 L5,2 L2,2 L2,5 L5,5 Z M5,7 L2,7 C0.894905844,7 0,6.1044757 0,5 L0,2 C0,0.8955243 0.894905844,3.55271368e-15 2,3.55271368e-15 L5,3.55271368e-15 C6.10509416,3.55271368e-15 7,0.8955243 7,2 L7,5 C7,6.1044757 6.10509416,7 5,7 Z M14,5 L14,2 L11,2 L11,5 L14,5 Z M14,7 L11,7 C9.89490584,7 9,6.1044757 9,5 L9,2 C9,0.8955243 9.89490584,3.55271368e-15 11,3.55271368e-15 L14,3.55271368e-15 C15.1050942,3.55271368e-15 16,0.8955243 16,2 L16,5 C16,6.1044757 15.1050942,7 14,7 Z M5,14 L5,11 L2,11 L2,14 L5,14 Z M5,16 L2,16 C0.894905844,16 0,15.1044757 0,14 L0,11 C0,9.8955243 0.894905844,9 2,9 L5,9 C6.10509416,9 7,9.8955243 7,11 L7,14 C7,15.1044757 6.10509416,16 5,16 Z M14,14 L14,11 L11,11 L11,14 L14,14 Z M14,16 L11,16 C9.89490584,16 9,15.1044757 9,14 L9,11 C9,9.8955243 9.89490584,9 11,9 L14,9 C15.1050942,9 16,9.8955243 16,11 L16,14 C16,15.1044757 15.1050942,16 14,16 Z" }), h("g", { fill: "none", "fill-rule": "evenodd", stroke: "none", "stroke-width": "1" }, h("mask", { fill: "#fff" }, h("use", { xlinkHref: "#path-1" })), h("use", { fill: "#000", "fill-rule": "nonzero", xlinkHref: "#path-1" }))))), h("div", { id: `visa-viz-data-table-container-${this.uniqueID}`, class: "visa-viz-data-table-container", "data-testid": this.unitTest ? 'data-table-container' : null })));
  }
  init() {
    // reading properties
    const keys = Object.keys(DataTableDefaultValues);
    let i = 0;
    const exceptions = {};
    for (i = 0; i < keys.length; i++) {
      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;
      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : DataTableDefaultValues[keys[i]];
    }
  }
  get dataTableEl() { return this; }
  static get style() { return dataTableCss; }
}, [0, "data-table", {
    "uniqueID": [1025, "unique-i-d"],
    "isCompact": [1028, "is-compact"],
    "hideDataTable": [1028, "hide-data-table"],
    "margin": [1040],
    "padding": [1040],
    "tableColumns": [1040],
    "secondaryTableColumns": [1040],
    "data": [16],
    "secondaryData": [16],
    "unitTest": [1028, "unit-test"],
    "showTable": [32]
  }]);
// incorporate OSS licenses into build
window['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["data-table"];
  components.forEach(tagName => { switch (tagName) {
    case "data-table":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DataTable);
      }
      break;
  } });
}

export { DataTable as D, selector as a, selectorAll as b, selection as c, defineCustomElement as d, event as e, styleValue as f, matcher as m, namespace as n, select as s };
