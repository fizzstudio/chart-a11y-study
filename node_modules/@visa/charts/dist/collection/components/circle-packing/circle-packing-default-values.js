/**
 * Copyright (c) 2020, 2021 Visa, Inc.
 *
 * This source code is licensed under the MIT license
 * https://github.com/visa/visa-chart-components/blob/master/LICENSE
 *
 **/
import Utils from '@visa/visa-charts-utils';
const { propDefaultValues } = Utils;
export class CirclePackingDefaultValues {
}
CirclePackingDefaultValues.mainTitle = 'Circle Packing Title';
CirclePackingDefaultValues.subTitle = "This is the circle packing chart's subtitle";
CirclePackingDefaultValues.height = 400;
CirclePackingDefaultValues.width = 400;
CirclePackingDefaultValues.circlePadding = 5;
CirclePackingDefaultValues.margin = {
  top: 400 * 0.01,
  bottom: 400 * 0.01,
  right: 400 * 0.01,
  left: 400 * 0.01
};
CirclePackingDefaultValues.padding = {
  top: 400 * 0.01,
  bottom: 400 * 0.01,
  right: 400 * 0.01,
  left: 400 * 0.01
};
CirclePackingDefaultValues.dataDepth = 5;
CirclePackingDefaultValues.displayDepth = 2;
CirclePackingDefaultValues.parentAccessor = 'parentNode';
CirclePackingDefaultValues.nodeAccessor = 'childNode';
CirclePackingDefaultValues.sizeAccessor = 'value';
CirclePackingDefaultValues.colorPalette = propDefaultValues.colorPaletteSequentialGrey;
CirclePackingDefaultValues.dataLabel = propDefaultValues.dataLabelCenter;
CirclePackingDefaultValues.hoverStyle = propDefaultValues.hoverStyle;
CirclePackingDefaultValues.clickStyle = propDefaultValues.clickStyle;
CirclePackingDefaultValues.hoverOpacity = propDefaultValues.hoverOpacity;
CirclePackingDefaultValues.cursor = propDefaultValues.cursor;
CirclePackingDefaultValues.interactionKeys = propDefaultValues.interactionKeys;
CirclePackingDefaultValues.highestHeadingLevel = propDefaultValues.highestHeadingLevel;
CirclePackingDefaultValues.annotations = propDefaultValues.annotations;
CirclePackingDefaultValues.accessibility = propDefaultValues.accessibility;
CirclePackingDefaultValues.animationConfig = propDefaultValues.animationConfig;
CirclePackingDefaultValues.tooltipLabel = propDefaultValues.tooltipLabel;
CirclePackingDefaultValues.showTooltip = propDefaultValues.showTooltip;
CirclePackingDefaultValues.clickHighlight = propDefaultValues.clickHighlight;
CirclePackingDefaultValues.suppressEvents = propDefaultValues.suppressEvents;
