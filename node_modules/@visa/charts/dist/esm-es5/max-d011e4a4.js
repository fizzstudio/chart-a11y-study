function ascending(n,i){return n<i?-1:n>i?1:n>=i?0:NaN}function bisector(n){if(n.length===1)n=ascendingComparator(n);return{left:function(i,e,t,l){if(t==null)t=0;if(l==null)l=i.length;while(t<l){var r=t+l>>>1;if(n(i[r],e)<0)t=r+1;else l=r}return t},right:function(i,e,t,l){if(t==null)t=0;if(l==null)l=i.length;while(t<l){var r=t+l>>>1;if(n(i[r],e)>0)l=r;else t=r+1}return t}}}function ascendingComparator(n){return function(i,e){return ascending(n(i),e)}}var ascendingBisect=bisector(ascending);var bisectRight=ascendingBisect.right;function max(n,i){var e=n.length,t=-1,l,r;if(i==null){while(++t<e){if((l=n[t])!=null&&l>=l){r=l;while(++t<e){if((l=n[t])!=null&&l>r){r=l}}}}}else{while(++t<e){if((l=i(n[t],t,n))!=null&&l>=l){r=l;while(++t<e){if((l=i(n[t],t,n))!=null&&l>r){r=l}}}}}return r}export{bisector as a,bisectRight as b,max as m};